RR <- phat1/phat2
lowerBound <- exp(log(RR) - qnorm(1-(1-conf.level)/2) * sqrt((tab[1,2] / (tab[1,1]*(tab[1,1]+tab[1,2]))) + (tab[2,2]/(tab[2,1]*(tab[2,1]+tab[2,2])))))
upperBound <- exp(log(RR) + qnorm(1-(1-conf.level)/2) * sqrt((tab[1,2] / (tab[1,1]*(tab[1,1]+tab[1,2]))) + (tab[2,2]/(tab[2,1]*(tab[2,1]+tab[2,2])))))
output <- c(RR, lowerBound, upperBound)
names(output) <- c("risk ratio", "RR CI lower", "RR CI upper")
print(output)
}
odds_ratio <- function(tab, conf.level=.95){
phat1 <- tab[1,1]/(tab[1,1]+tab[1,2])
phat2 <- tab[2,1]/(tab[2,1]+tab[2,2])
OR <- (phat1/(1-phat1))/(phat2/(1-phat2))
lowerBound <- exp(log(OR) - qnorm(1-(1-conf.level)/2) * sqrt((1/tab[1,1]) + (1/tab[1,2]) + (1/tab[2,1]) + (1/tab[2,2])))
upperBound <- exp(log(OR) + qnorm(1-(1-conf.level)/2) * sqrt((1/tab[1,1]) + (1/tab[1,2]) + (1/tab[2,1]) + (1/tab[2,2])))
output <- c(OR, lowerBound, upperBound)
names(output) <- c("odds ratio", "OR CI lower", "OR CI upper")
print(output)
}
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# check order of 2x2 table
xtabs(~fst2yrs+Group, data=lead)
# change order of outcome variable
lead$Group <- factor(lead$Group, levels=c('Exposed', 'Control'))
# change order of exposure variable
lead$fst2yrs <- factor(lead$fst2yrs, levels=c('Yes', 'No'))
# check order new 2x2 table
xtabs(~fst2yrs+Group, data=lead)
# calculate row percentages
proportions(xtabs(~ fst2yrs + Group, data=lead), margin=1)
# calculate risk difference
risk_diff(table(lead$fst2yrs, lead$Group))
# calculate risk ratio
risk_ratio(table(lead$fst2yrs, lead$Group))
# calculate odds ratio
odds_ratio(table(lead$fst2yrs, lead$Group))
# create new indicator variable; 1 for maxfwt >= 50 taps
lead$maxfwt_high <- as.factor((lead$maxfwt >= 50)*1)
# check order of 2x2 table with new variable
xtabs(~Group+maxfwt_high, data=lead)
# change order of maxfwt_high variable
lead$maxfwt_high <- factor(lead$maxfwt_high, levels=c(1, 0))
# check order of table with reordered indicator variable
xtabs(~Group+maxfwt_high, data=lead)
xtabs(~Group+maxfwt_high, data=lead)
# risk difference
risk_diff(table(lead$Group, lead$maxfwt_high))
# risk ratio
risk_ratio(table(lead$Group, lead$maxfwt_high))
# odds ratio
odds_ratio(table(lead$Group, lead$maxfwt_high))
# check expected cell counts
with(lead, chisq.test(fst2yrs, Group))$expected
# chi squared test
chisq.test(lead$fst2yrs, lead$Group)
# fishers exact test for same hypothesis test as above
fisher.test(lead$fst2yrs, lead$Group)
# check table set up
xtabs(~iqp+Group, data=lead)
View(lead)
# create new indicator variable for high performance iq
lead$iqp_high <- as.factor((lead$iqp > 100)*1)
# check table set up
xtabs(~Group+iqp_high, data=lead)
# change order of iqp_high variable
lead$iqp_high <- factor(lead$iqp_high, levels=c(1,0))
# check new table set up
xtabs(~Group+iqp_high, data=lead)
# create new indicator variable for high performance iq
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check table set up
xtabs(~Group+iqp_high, data=lead)
# change order of iqp_high variable
lead$iqp_high <- factor(lead$iqp_high, levels=c(1,0))
# check new table set up
xtabs(~Group+iqp_high, data=lead)
# create new indicator variable for high performance iq
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check table set up
xtabs(~Group+iqp_high, data=lead)
# change order of iqp_high variable
lead$iqp_high <- factor(lead$iqp_high, levels=c(1,0))
# check new table set up
xtabs(~Group+iqp_high, data=lead)
# calculate row proportions/percentages
proportions(xtabs(~Group+iqp_high, data=lead), margin=1)
# calculate subjects needed for desired power of 80%
power.prop.test(n=NULL, p1=0.4130435, p2=0.5769231, power=0.8, sig.level=.05, alternative="two.sided")
# calculate power given 400 (200,200 each group) subjects
power.prop.test(n=400, p1=0.4130435, p2=0.5769231, power=NULL, sig.level=.05, alternative="two.sided")
# check table set up
xtabs(~fst2yrs+Group,data=lead)
# calculate row proportions
proportions(xtabs(~fst2yrs+Group, data=lead), margin=1)
# calculate power given 400 (200,200 each group) subjects
power.prop.test(n=400, p1=0.4857143, p2=0.3258427, power=NULL, sig.level=.05, alternative="two.sided")
# calculate power given 200 subjects in each group
power.prop.test(n=200, p1=0.4857143, p2=0.3258427, power=NULL, sig.level=.05, alternative="two.sided")
# create new high verbal iq indicator variable
lead$iqv_high <- as.factor((lead$iqv >= 100)*1)
# check table set up
xtabs(~Group+iqv_high, data=lead)
table(lead$iqv_high)
# create new high verbal iq indicator variable
lead$iqv_high <- as.factor((lead$iqv >= 100)*1)
# check table set up
table(lead$iqv_high)
risk_diff <- function(tab, conf.level=.95){
phat1 <- tab[1,1]/(tab[1,1]+tab[1,2])
phat2 <- tab[2,1]/(tab[2,1]+tab[2,2])
RD <- phat1 - phat2
lowerBound <- RD - qnorm(1-(1-conf.level)/2) * sqrt(((phat1*(1-phat1))/(tab[1,1]+tab[1,2])) + ((phat2*(1-phat2))/(tab[2,1]+tab[2,2])))
upperBound <- RD + qnorm(1-(1-conf.level)/2) * sqrt(((phat1*(1-phat1))/(tab[1,1]+tab[1,2])) + ((phat2*(1-phat2))/(tab[2,1]+tab[2,2])))
output <- c(RD, lowerBound, upperBound)
names(output) <- c("risk difference", "RD CI lower", "RD CI upper")
print(output)
}
risk_ratio <- function(tab, conf.level=.95){
phat1 <- tab[1,1]/(tab[1,1]+tab[1,2])
phat2 <- tab[2,1]/(tab[2,1]+tab[2,2])
RR <- phat1/phat2
lowerBound <- exp(log(RR) - qnorm(1-(1-conf.level)/2) * sqrt((tab[1,2] / (tab[1,1]*(tab[1,1]+tab[1,2]))) + (tab[2,2]/(tab[2,1]*(tab[2,1]+tab[2,2])))))
upperBound <- exp(log(RR) + qnorm(1-(1-conf.level)/2) * sqrt((tab[1,2] / (tab[1,1]*(tab[1,1]+tab[1,2]))) + (tab[2,2]/(tab[2,1]*(tab[2,1]+tab[2,2])))))
output <- c(RR, lowerBound, upperBound)
names(output) <- c("risk ratio", "RR CI lower", "RR CI upper")
print(output)
}
odds_ratio <- function(tab, conf.level=.95){
phat1 <- tab[1,1]/(tab[1,1]+tab[1,2])
phat2 <- tab[2,1]/(tab[2,1]+tab[2,2])
OR <- (phat1/(1-phat1))/(phat2/(1-phat2))
lowerBound <- exp(log(OR) - qnorm(1-(1-conf.level)/2) * sqrt((1/tab[1,1]) + (1/tab[1,2]) + (1/tab[2,1]) + (1/tab[2,2])))
upperBound <- exp(log(OR) + qnorm(1-(1-conf.level)/2) * sqrt((1/tab[1,1]) + (1/tab[1,2]) + (1/tab[2,1]) + (1/tab[2,2])))
output <- c(OR, lowerBound, upperBound)
names(output) <- c("odds ratio", "OR CI lower", "OR CI upper")
print(output)
}
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# check order of 2x2 table
xtabs(~fst2yrs+Group, data=lead)
# change order of outcome variable
lead$Group <- factor(lead$Group, levels=c('Exposed', 'Control'))
# change order of exposure variable
lead$fst2yrs <- factor(lead$fst2yrs, levels=c('Yes', 'No'))
# check order new 2x2 table
xtabs(~fst2yrs+Group, data=lead)
# calculate row percentages
proportions(xtabs(~ fst2yrs + Group, data=lead), margin=1)
# calculate risk difference
risk_diff(table(lead$fst2yrs, lead$Group))
# calculate risk ratio
risk_ratio(table(lead$fst2yrs, lead$Group))
# calculate odds ratio
odds_ratio(table(lead$fst2yrs, lead$Group))
# create new indicator variable; 1 for maxfwt >= 50 taps
lead$maxfwt_high <- as.factor((lead$maxfwt >= 50)*1)
# check order of 2x2 table with new variable
xtabs(~Group+maxfwt_high, data=lead)
# change order of maxfwt_high variable
lead$maxfwt_high <- factor(lead$maxfwt_high, levels=c(1, 0))
# check order of table with reordered indicator variable
xtabs(~Group+maxfwt_high, data=lead)
# check table set up; modified in 2a
xtabs(~Group+maxfwt_high, data=lead)
# risk difference
risk_diff(table(lead$Group, lead$maxfwt_high))
# risk ratio
risk_ratio(table(lead$Group, lead$maxfwt_high))
# odds ratio
odds_ratio(table(lead$Group, lead$maxfwt_high))
# check expected cell counts and table set up
with(lead, chisq.test(fst2yrs, Group))$expected
# chi squared test for probability of lead exposure between children who did and did not live near the smelter during their first two years of life
chisq.test(lead$fst2yrs, lead$Group)
# fishers exact test for same hypothesis test as above
fisher.test(lead$fst2yrs, lead$Group)
# create new indicator variable for high performance iq
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check table set up
xtabs(~Group+iqp_high, data=lead)
# change order of iqp_high variable
lead$iqp_high <- factor(lead$iqp_high, levels=c(1,0))
# check new table set up
xtabs(~Group+iqp_high, data=lead)
# calculate row proportions/percentages
proportions(xtabs(~Group+iqp_high, data=lead), margin=1)
# calculate subjects needed for desired power of 80%
power.prop.test(n=NULL, p1=0.4130435, p2=0.5769231, power=0.8, sig.level=.05, alternative="two.sided")
# check table set up
xtabs(~fst2yrs+Group,data=lead)
# calculate row proportions
proportions(xtabs(~fst2yrs+Group, data=lead), margin=1)
# calculate power given 200 subjects in each group
power.prop.test(n=200, p1=0.4857143, p2=0.3258427, power=NULL, sig.level=.05, alternative="two.sided")
# create new high verbal iq indicator variable
lead$iqv_high <- as.factor((lead$iqv >= 100)*1)
# check table set up
table(lead$iqv_high)
# create new high verbal iq indicator variable
lead$iqv_high <- as.factor((lead$iqv >= 100)*1)
# check table set up
xtabs(~lead_grp+iqv_high, data=lead)
# change order of iqv_high variable
lead$iqv_high <- factor(lead$iqv_high, levels=c(1,0))
# change order of iqv_high variable
lead$iqv_high <- factor(lead$iqv_high, levels=c(1,0))
# check table set up
xtabs(~lead_grp+iqv_high, data=lead)
with(lead, chisq.test(lead_grp, iqf_high))$expected
with(lead, chisq.test(lead_grp, iqv_high))$expected
# use fishers exact hypothesis test
fisher.test(lead$lead_grp, lead$iqv_high)
risk_diff <- function(tab, conf.level=.95){
phat1 <- tab[1,1]/(tab[1,1]+tab[1,2])
phat2 <- tab[2,1]/(tab[2,1]+tab[2,2])
RD <- phat1 - phat2
lowerBound <- RD - qnorm(1-(1-conf.level)/2) * sqrt(((phat1*(1-phat1))/(tab[1,1]+tab[1,2])) + ((phat2*(1-phat2))/(tab[2,1]+tab[2,2])))
upperBound <- RD + qnorm(1-(1-conf.level)/2) * sqrt(((phat1*(1-phat1))/(tab[1,1]+tab[1,2])) + ((phat2*(1-phat2))/(tab[2,1]+tab[2,2])))
output <- c(RD, lowerBound, upperBound)
names(output) <- c("risk difference", "RD CI lower", "RD CI upper")
print(output)
}
risk_ratio <- function(tab, conf.level=.95){
phat1 <- tab[1,1]/(tab[1,1]+tab[1,2])
phat2 <- tab[2,1]/(tab[2,1]+tab[2,2])
RR <- phat1/phat2
lowerBound <- exp(log(RR) - qnorm(1-(1-conf.level)/2) * sqrt((tab[1,2] / (tab[1,1]*(tab[1,1]+tab[1,2]))) + (tab[2,2]/(tab[2,1]*(tab[2,1]+tab[2,2])))))
upperBound <- exp(log(RR) + qnorm(1-(1-conf.level)/2) * sqrt((tab[1,2] / (tab[1,1]*(tab[1,1]+tab[1,2]))) + (tab[2,2]/(tab[2,1]*(tab[2,1]+tab[2,2])))))
output <- c(RR, lowerBound, upperBound)
names(output) <- c("risk ratio", "RR CI lower", "RR CI upper")
print(output)
}
odds_ratio <- function(tab, conf.level=.95){
phat1 <- tab[1,1]/(tab[1,1]+tab[1,2])
phat2 <- tab[2,1]/(tab[2,1]+tab[2,2])
OR <- (phat1/(1-phat1))/(phat2/(1-phat2))
lowerBound <- exp(log(OR) - qnorm(1-(1-conf.level)/2) * sqrt((1/tab[1,1]) + (1/tab[1,2]) + (1/tab[2,1]) + (1/tab[2,2])))
upperBound <- exp(log(OR) + qnorm(1-(1-conf.level)/2) * sqrt((1/tab[1,1]) + (1/tab[1,2]) + (1/tab[2,1]) + (1/tab[2,2])))
output <- c(OR, lowerBound, upperBound)
names(output) <- c("odds ratio", "OR CI lower", "OR CI upper")
print(output)
}
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# check order of 2x2 table
xtabs(~fst2yrs+Group, data=lead)
# change order of outcome variable
lead$Group <- factor(lead$Group, levels=c('Exposed', 'Control'))
# change order of exposure variable
lead$fst2yrs <- factor(lead$fst2yrs, levels=c('Yes', 'No'))
# check order new 2x2 table
xtabs(~fst2yrs+Group, data=lead)
# calculate row percentages
proportions(xtabs(~ fst2yrs + Group, data=lead), margin=1)
# calculate risk difference
risk_diff(table(lead$fst2yrs, lead$Group))
# calculate risk ratio
risk_ratio(table(lead$fst2yrs, lead$Group))
# calculate odds ratio
odds_ratio(table(lead$fst2yrs, lead$Group))
# create new indicator variable; 1 for maxfwt >= 50 taps
lead$maxfwt_high <- as.factor((lead$maxfwt >= 50)*1)
# check order of 2x2 table with new variable
xtabs(~Group+maxfwt_high, data=lead)
# change order of maxfwt_high variable
lead$maxfwt_high <- factor(lead$maxfwt_high, levels=c(1, 0))
# check order of table with reordered indicator variable
xtabs(~Group+maxfwt_high, data=lead)
# check table set up; modified in 2a
xtabs(~Group+maxfwt_high, data=lead)
# risk difference
risk_diff(table(lead$Group, lead$maxfwt_high))
# risk ratio
risk_ratio(table(lead$Group, lead$maxfwt_high))
# odds ratio
odds_ratio(table(lead$Group, lead$maxfwt_high))
# check expected cell counts and table set up
with(lead, chisq.test(fst2yrs, Group))$expected
# chi squared test for probability of lead exposure between children who did and did not live near the smelter during their first two years of life
chisq.test(lead$fst2yrs, lead$Group)
# fishers exact test for same hypothesis test as above
fisher.test(lead$fst2yrs, lead$Group)
# create new indicator variable for high performance iq
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check table set up
xtabs(~Group+iqp_high, data=lead)
# change order of iqp_high variable
lead$iqp_high <- factor(lead$iqp_high, levels=c(1,0))
# check new table set up
xtabs(~Group+iqp_high, data=lead)
# calculate row proportions/percentages
proportions(xtabs(~Group+iqp_high, data=lead), margin=1)
# calculate subjects needed for desired power of 80%
power.prop.test(n=NULL, p1=0.4130435, p2=0.5769231, power=0.8, sig.level=.05, alternative="two.sided")
# check table set up
xtabs(~fst2yrs+Group,data=lead)
# calculate row proportions
proportions(xtabs(~fst2yrs+Group, data=lead), margin=1)
# calculate power given 200 subjects in each group
power.prop.test(n=200, p1=0.4857143, p2=0.3258427, power=NULL, sig.level=.05, alternative="two.sided")
# create new high verbal iq indicator variable
lead$iqv_high <- as.factor((lead$iqv >= 100)*1)
# check table set up
xtabs(~lead_grp+iqv_high, data=lead)
# change order of iqv_high variable
lead$iqv_high <- factor(lead$iqv_high, levels=c(1,0))
# check table set up
xtabs(~lead_grp+iqv_high, data=lead)
# check expected cell values for chi squared test
with(lead, chisq.test(lead_grp, iqv_high))$expected
# use fishers exact hypothesis test
fisher.test(lead$lead_grp, lead$iqv_high)
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# check order of variables in model
table(lead$fst2yrs, lead$Group)
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# check order of variables in model
table(lead$fst2yrs, lead$Group)
# check order of outcome variable in model
table(lead$Group)
# check order of outcome variable
table(lead$Group)
# check order of predictor variable
table(lead$fst2yrs)
# logistic regression model
logistic1 <- glm(Group ~ fst2yrs, family=binomial, data=lead)
# logistic regression model
logistic.1 <- glm(Group ~ fst2yrs, family=binomial, data=lead)
# logistic regression model
lead$Group <- as.factor(lead$Group)
table(lead$Group)
logistic.1 <- glm(Group ~ fst2yrs, family=binomial, data=lead)
summary(logistic.1)$coef
# transform outcome variable
lead$Group <- as.factor(lead$Group)
table(lead$Group)
# logistic regression model
logistic.1 <- glm(Group ~ fst2yrs, family=binomial, data=lead)
summary(logistic.1)$coef
# check order of outcome variable
table(lead$Group)
# check order of predictor variable
table(lead$fst2yrs)
# transform outcome variable
lead$Group <- as.factor(lead$Group)
table(lead$Group)
# logistic regression model
logistic.1 <- glm(Group ~ fst2yrs, family=binomial, data=lead)
summary(logistic.1)$coef
View(lead)
# prediction of logistic regression model for a child who did live near teh smelter during their first two years of life
as.numeric(predict(logistic.1, data.frame(fst2yrs="Yes")))
exp(coef(logistic.1))
exp(-0.7270487 + 0.6698903(1))
exp(-0.7270487 + 0.6698903*1)
exp(-0.7270487 + 0.6698903*1) / (1+exp(-0.7270487 + 0.6698903*1))
exp(coef(logistic.1))
# indicator variable for high performance IQ
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check order of outcome variable
table(lead$iqp_high)
# logistic regression model
logistic.2 <- glm(iqp_high ~ totyrs+hh_index, family=binomial, data=lead)
summary(logistic.2)$coef
exp(coef(logistic.2))
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# indicator variable for high dominant hand figer-wrist tapping rate
lead$maxfwt_high <- as.factor((lead$maxfwt >= 80)*1)
# relative frequencies of maxfwt_high indicator variable
prop.table(table(lead$maxfwt_high))
# indicator variable for high dominant hand figer-wrist tapping rate
lead$maxfwt_high <- as.factor((lead$maxfwt >= 80)*1)
# relative frequencies of maxfwt_high indicator variable
prop.table(table(lead$maxfwt_high))
# check order of outcome variable
table(lead$maxfwt_high)
View(lead)
# logistic regression model
logistic.1 <- glm(maxfwt_high ~ age + hh_index + hyperact + iqf + sex + Group, family=binomial, data=lead)
summary(logistic.1)$coef
# logistic regression model 1
logistic.1 <- glm(maxfwt_high ~ age + hh_index + hyperact + iqf + sex + Group, family=binomial, data=lead)
summary(logistic.1)$coef
# check order of outcome variable
table(lead$Group)
# logistic regression model 2
logistic.2 <- glm(Group ~ fst2yrs + hh_index, family=binomial, data=lead)
# check order of outcome variable
table(lead$Group)
# check order of outcome variable
table(lead$Group)
# logistic regression model 2
logistic.2 <- glm(Group ~ fst2yrs, family=binomial, data=lead)
# transform outcome variable
lead$Group <- as.factor(lead$Group)
# check order of outcome variable
table(lead$Group)
# logistic regression model 2
logistic.2 <- glm(Group ~ fst2yrs + hh_index, family=binomial, data=lead)
summary(logistic.2)$coef
# calculate 95% CI of odds ratio
exp(confint(logistic.2, level=0.95))
# indicator variable for high performance IQ
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check order of outcome variable
table(lead$iqp_high)
# logistic regression model one
logistic.3.1 <- glm(iqp_high ~ totyrs, family=binomial, data=lead)
summary(logistic.3.1)$coef
# logistic regression model two
logistic.3.2 <- glm(iqp_high ~ totyrs + fst2yrs, family=binomial, data=lead)
summary(logistic.3.2)$coef
# logistic regression model one
logistic.3.1 <- glm(iqp_high ~ totyrs, family=binomial, data=lead)
summary(logistic.3.1)
# logistic regression model two
logistic.3.2 <- glm(iqp_high ~ totyrs + fst2yrs, family=binomial, data=lead)
summary(logistic.3.2)
# logistic regression model 2
logistic.2 <- glm(Group ~ fst2yrs + hh_index, family=binomial, data=lead)
summary(logistic.2)
# calculate 95% CI of odds ratio
exp(confint(logistic.2, level=0.95))
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# indicator variable for high dominant hand figer-wrist tapping rate
lead$maxfwt_high <- as.factor((lead$maxfwt >= 80)*1)
# relative frequencies of maxfwt_high indicator variable
prop.table(table(lead$maxfwt_high))
# check order of outcome variable
table(lead$maxfwt_high)
# logistic regression model 1
logistic.1 <- glm(maxfwt_high ~ age + hh_index + hyperact + iqf + sex + Group, family=binomial, data=lead)
summary(logistic.1)$coef
# transform outcome variable
lead$Group <- as.factor(lead$Group)
# check order of outcome variable
table(lead$Group)
# logistic regression model 2
logistic.2 <- glm(Group ~ fst2yrs + hh_index, family=binomial, data=lead)
summary(logistic.2)
# calculate 95% CI of odds ratio
exp(confint(logistic.2, level=0.95))
# indicator variable for high performance IQ
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check order of outcome variable
table(lead$iqp_high)
# logistic regression model one
logistic.3.1 <- glm(iqp_high ~ totyrs, family=binomial, data=lead)
summary(logistic.3.1)
# logistic regression model two
logistic.3.2 <- glm(iqp_high ~ totyrs + fst2yrs, family=binomial, data=lead)
summary(logistic.3.2)
# histogram of hyperactivity level
hist(lead$hyperact, freq=TRUE, col="darkgray", xlab="Werry-Weiss-Peters scale", main="")
# histogram of hyperactivity level
hist(lead$hyperact, freq=TRUE, col="darkgray", xlab="Hyperactivity (Werry-Weiss-Peters scale)", main="")
# histogram of hyperactivity level
hist(lead$hyperact, freq=TRUE, col="darkgray", xlab="Hyperactivity \n(Werry-Weiss-Peters scale)", main="")
# histogram of hyperactivity level
hist(lead$hyperact, freq=TRUE, col="darkgray", xlab="Hyperactivity\n(Werry-Weiss-Peters scale)", main="")
# Wilcoxon signed-rank test for hyperactivity
wilcox.test(lead$hyperact, alternative="two.sided", mu=1)
# Wilcoxon signed-rank test for paired group
wilcox.test(lead$fwt_l, lead$fwt_r, alternative="two.sided", paired=TRUE)
# Wilcoxon rank-sum test for independent groups
wilcox.test(maxfwt ~ Group, alternative="two.sided", data=lead)
# Kruskall-Wallis test for >2 independent groups
kruskal.test(iqf ~ lead_grp, data=lead)
library(readxl)
lead<-read_excel('lead.xlsx', col_names=TRUE, na="")
# indicator variable for high dominant hand figer-wrist tapping rate
lead$maxfwt_high <- as.factor((lead$maxfwt >= 80)*1)
# relative frequencies of maxfwt_high indicator variable
prop.table(table(lead$maxfwt_high))
# check order of outcome variable
table(lead$maxfwt_high)
# logistic regression model 1
logistic.1 <- glm(maxfwt_high ~ age + hh_index + hyperact + iqf + sex + Group, family=binomial, data=lead)
summary(logistic.1)$coef
# transform outcome variable
lead$Group <- as.factor(lead$Group)
# check order of outcome variable
table(lead$Group)
# logistic regression model 2
logistic.2 <- glm(Group ~ fst2yrs + hh_index, family=binomial, data=lead)
summary(logistic.2)
# calculate 95% CI of odds ratio
exp(confint(logistic.2, level=0.95))
# indicator variable for high performance IQ
lead$iqp_high <- as.factor((lead$iqp >= 100)*1)
# check order of outcome variable
table(lead$iqp_high)
# logistic regression model one
logistic.3.1 <- glm(iqp_high ~ totyrs, family=binomial, data=lead)
summary(logistic.3.1)
# logistic regression model two
logistic.3.2 <- glm(iqp_high ~ totyrs + fst2yrs, family=binomial, data=lead)
summary(logistic.3.2)
# histogram of hyperactivity level
hist(lead$hyperact, freq=TRUE, col="darkgray", xlab="Hyperactivity\n(Werry-Weiss-Peters scale)", main="")
# Wilcoxon signed-rank test for hyperactivity
wilcox.test(lead$hyperact, alternative="two.sided", mu=1)
# Wilcoxon signed-rank test for paired group
wilcox.test(lead$fwt_l, lead$fwt_r, alternative="two.sided", paired=TRUE)
# Wilcoxon rank-sum test for independent groups
wilcox.test(maxfwt ~ Group, alternative="two.sided", data=lead)
# Kruskall-Wallis test for >2 independent groups
kruskal.test(iqf ~ lead_grp, data=lead)
